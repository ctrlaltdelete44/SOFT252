/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controllers.old.PatientController;
import controllers.old.Controller;
import controllers.old.SecretaryController;
import controllers.old.DoctorController;
import controllers.old.AdminController;
import utilities.accounts.AccountType;
import controllers.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Anthony
 */
public class GUI extends javax.swing.JFrame {

    private final Controller controller = Controller.getOrCreate();
    private final AdminController adminController = AdminController.getOrCreate();
    private final PatientController patientController = PatientController.getOrCreate();
    private final SecretaryController secretaryController = SecretaryController.getOrCreate();
    private final DoctorController doctorController = DoctorController.getOrCreate();
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestAccount_grpSex = new javax.swing.ButtonGroup();
        doctor_grpSchedule = new javax.swing.ButtonGroup();
        appointment_grpSchedule = new javax.swing.ButtonGroup();
        jScrollPane17 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panelLogin = new javax.swing.JPanel();
        login_lblWelcome = new javax.swing.JLabel();
        login_txtUsername = new javax.swing.JTextField();
        login_lblUsername = new javax.swing.JLabel();
        login_lblPassword = new javax.swing.JLabel();
        login_txtPassword = new javax.swing.JPasswordField();
        login_btnLogin = new javax.swing.JButton();
        login_lblErrorMessage = new javax.swing.JLabel();
        login_btnRequestAccount = new javax.swing.JButton();
        panelRequestAccount = new javax.swing.JPanel();
        requestAccount_lblFirst = new javax.swing.JLabel();
        requestAccount_txtFirst = new javax.swing.JTextField();
        requestAccount_lblSurname = new javax.swing.JLabel();
        requestAccount_txtSurname = new javax.swing.JTextField();
        requestAccount_lblAddress = new javax.swing.JLabel();
        requestAccount_lblSex = new javax.swing.JLabel();
        requestAccount_rdoMale = new javax.swing.JRadioButton();
        requestAccount_rdoFemale = new javax.swing.JRadioButton();
        requestAccount_lblAge = new javax.swing.JLabel();
        requestAccount_spnAge = new javax.swing.JSpinner();
        requestAccount_btnRequest = new javax.swing.JButton();
        requestAccount_btnCancel = new javax.swing.JButton();
        requestAccount_lblPassword = new javax.swing.JLabel();
        requestAccount_txtPassword = new javax.swing.JPasswordField();
        jScrollPane23 = new javax.swing.JScrollPane();
        requestAccount_txtAddress = new javax.swing.JTextArea();
        panelAdmin = new javax.swing.JPanel();
        admin_lblWelcome = new javax.swing.JLabel();
        admin_scrollPane = new javax.swing.JScrollPane();
        admin_lstDoctors = new javax.swing.JList<>();
        admin_lblDoctors = new javax.swing.JLabel();
        admin_btnAddAccount = new javax.swing.JButton();
        admin_btnLogout = new javax.swing.JButton();
        admin_btnDeleteDoctor = new javax.swing.JButton();
        admin_lblSecretaries = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        admin_lstSecretaries = new javax.swing.JList<>();
        admin_btnDeleteSecretary = new javax.swing.JButton();
        jScrollPane20 = new javax.swing.JScrollPane();
        admin_txtFeedbackMessage = new javax.swing.JTextArea();
        admin_lblFeedbackTitle = new javax.swing.JLabel();
        admin_btnProvideFeedback = new javax.swing.JButton();
        admin_lblPatientCommentsTitle = new javax.swing.JLabel();
        jScrollPane21 = new javax.swing.JScrollPane();
        admin_lstComments = new javax.swing.JList<>();
        panelAddAccount = new javax.swing.JPanel();
        addAccount_lblFirst = new javax.swing.JLabel();
        addAccount_txtFirst = new javax.swing.JTextField();
        addAccount_lblLast = new javax.swing.JLabel();
        addAccount_txtLast = new javax.swing.JTextField();
        addAccount_lblAddress = new javax.swing.JLabel();
        addAccount_lblPassword = new javax.swing.JLabel();
        addAccount_txtPassword = new javax.swing.JPasswordField();
        addAccount_cmbAccountType = new javax.swing.JComboBox<>();
        addAccount_btnAddAccount = new javax.swing.JButton();
        addAccount_btnBack = new javax.swing.JButton();
        jScrollPane22 = new javax.swing.JScrollPane();
        addAccount_txtAddress = new javax.swing.JTextArea();
        panelSecretary = new javax.swing.JPanel();
        secretary_lblWelcome = new javax.swing.JLabel();
        secretary_btnLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        secretary_lstRequests = new javax.swing.JList<>();
        secretary_lblRequests = new javax.swing.JLabel();
        secretary_btnDeleteRequest = new javax.swing.JButton();
        secretary_btnConfirmRequest = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        secretary_lstStock = new javax.swing.JList<>();
        secretary_lblStock = new javax.swing.JLabel();
        secretary_txtStockName = new javax.swing.JTextField();
        secretary_lblStockItemName = new javax.swing.JLabel();
        secretary_lblQuantity = new javax.swing.JLabel();
        secretary_spnQuantity = new javax.swing.JSpinner();
        secretary_btnAddStock = new javax.swing.JButton();
        secretary_lblPatients = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        secretary_lstPatients = new javax.swing.JList<>();
        secretary_btnDeleteAccount = new javax.swing.JButton();
        panelDoctor = new javax.swing.JPanel();
        doctor_lblWelcome = new javax.swing.JLabel();
        doctor_btnLogout = new javax.swing.JButton();
        doctor_lblRating = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        doctor_lstSchedule = new javax.swing.JList<>();
        doctor_txtSchedule = new javax.swing.JLabel();
        doctor_btnBookings = new javax.swing.JToggleButton();
        doctor_btnSchedule = new javax.swing.JToggleButton();
        doctor_btnFreeDays = new javax.swing.JToggleButton();
        doctor_btnTakeAppointment = new javax.swing.JButton();
        doctor_btnScheduleWeek = new javax.swing.JButton();
        doctor_lblOrderStockTitle = new javax.swing.JLabel();
        doctor_txtStock = new javax.swing.JTextField();
        doctor_btnRequestStock = new javax.swing.JButton();
        panelPatient = new javax.swing.JPanel();
        patient_lblWelcome = new javax.swing.JLabel();
        patient_btnLogout = new javax.swing.JButton();
        patient_btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        patient_lstDoctors = new javax.swing.JList<>();
        patient_lblDoctors = new javax.swing.JLabel();
        patient_btnProvideFeedback = new javax.swing.JButton();
        patient_btnRequestAppointment = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        patient_lstAvailability = new javax.swing.JList<>();
        patitent_lblAvailability = new javax.swing.JLabel();
        patient_lblNextAppointment = new javax.swing.JLabel();
        patient_lblActiveAppointment = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        patient_lstHistory = new javax.swing.JList<>();
        patient_lblHistoryTitle = new javax.swing.JLabel();
        patient_txtNextAppointment = new javax.swing.JTextField();
        patient_btnViewPrescription = new javax.swing.JButton();
        panelFeedback = new javax.swing.JPanel();
        feedback_sldRating = new javax.swing.JSlider();
        feedback_lblRating = new javax.swing.JLabel();
        feedback_lblComments = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        feedback_txtComments = new javax.swing.JTextArea();
        feedback_btnSubmit = new javax.swing.JButton();
        feedback_btnBack = new javax.swing.JButton();
        panelViewAvailability = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        availability_lstSchedule = new javax.swing.JList<>();
        availability_btnAssign = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        availability_lstDoctors = new javax.swing.JList<>();
        availability_txtTitle = new javax.swing.JLabel();
        availability_lblRequest = new javax.swing.JLabel();
        panelAppointment = new javax.swing.JPanel();
        appointment_lblPatientTitle = new javax.swing.JLabel();
        appointment_lblPatient = new javax.swing.JLabel();
        appointment_lblDoctorTitle = new javax.swing.JLabel();
        appointment_lblDoctor = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        appointment_txtNotes = new javax.swing.JTextArea();
        appointment_lblNotesTitle = new javax.swing.JLabel();
        appointment_chkPrescription = new javax.swing.JCheckBox();
        appointment_chkAppointment = new javax.swing.JCheckBox();
        appointment_lblPrescriptionTitle = new javax.swing.JLabel();
        appointment_txtMedicine = new javax.swing.JTextField();
        appointment_spnQuantity = new javax.swing.JSpinner();
        appointment_lblAppointmentTitle = new javax.swing.JLabel();
        appointment_spnDate = new javax.swing.JSpinner();
        appointment_lblNextAppointmentTitle = new javax.swing.JLabel();
        appointment_rdoDays = new javax.swing.JRadioButton();
        appointment_rdoMonths = new javax.swing.JRadioButton();
        appointment_rdoYears = new javax.swing.JRadioButton();
        appointment_btnProcessAppointment = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        appointment_lstHistory = new javax.swing.JList<>();
        doctor_lblHistoryTitle = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        appointment_txtPrescriptionGuide = new javax.swing.JTextArea();
        appointment_lblDosageTitle = new javax.swing.JLabel();
        panelPrescription = new javax.swing.JPanel();
        prescription_llPatientTitle = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        prescription_txtPatient = new javax.swing.JTextArea();
        jScrollPane16 = new javax.swing.JScrollPane();
        prescription_txtDosage = new javax.swing.JTextArea();
        prescription_lblDoctorTitle = new javax.swing.JLabel();
        prescription_lblNotesTitle = new javax.swing.JLabel();
        jScrollPane18 = new javax.swing.JScrollPane();
        prescription_txtDoctor = new javax.swing.JTextArea();
        prescription_lblDosageTitle = new javax.swing.JLabel();
        jScrollPane19 = new javax.swing.JScrollPane();
        prescription_txtNotes = new javax.swing.JTextArea();
        prescription_btnBack = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane17.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient Administration");

        panelLogin.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelLogin.setRequestFocusEnabled(false);

        login_lblWelcome.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        login_lblWelcome.setText("Hospital Management");

        login_txtUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        login_lblUsername.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        login_lblUsername.setText("Username:");

        login_lblPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        login_lblPassword.setText("Password:");

        login_txtPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        login_btnLogin.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        login_btnLogin.setText("Log in");
        login_btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnLoginActionPerformed(evt);
            }
        });

        login_lblErrorMessage.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        login_lblErrorMessage.setForeground(new java.awt.Color(255, 0, 0));
        login_lblErrorMessage.setText(" ");

        login_btnRequestAccount.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        login_btnRequestAccount.setText("Request New Account");
        login_btnRequestAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnRequestAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLoginLayout = new javax.swing.GroupLayout(panelLogin);
        panelLogin.setLayout(panelLoginLayout);
        panelLoginLayout.setHorizontalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addGroup(panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(login_btnLogin))
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(login_btnRequestAccount))
                    .addGroup(panelLoginLayout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addGroup(panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(login_lblUsername)
                            .addComponent(login_txtUsername)
                            .addComponent(login_lblPassword)
                            .addComponent(login_txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(login_lblErrorMessage))))
                .addContainerGap(351, Short.MAX_VALUE))
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(login_lblWelcome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLoginLayout.setVerticalGroup(
            panelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLoginLayout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(login_lblWelcome)
                .addGap(52, 52, 52)
                .addComponent(login_lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(login_txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(login_lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(login_txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(login_btnLogin)
                .addGap(10, 10, 10)
                .addComponent(login_lblErrorMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 422, Short.MAX_VALUE)
                .addComponent(login_btnRequestAccount)
                .addContainerGap())
        );

        panelRequestAccount.setPreferredSize(new java.awt.Dimension(1000, 1000));
        panelRequestAccount.setRequestFocusEnabled(false);

        requestAccount_lblFirst.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblFirst.setText("First Name");

        requestAccount_txtFirst.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        requestAccount_lblSurname.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblSurname.setText("Surname");

        requestAccount_txtSurname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        requestAccount_lblAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblAddress.setText("Address");

        requestAccount_lblSex.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblSex.setText("Sex");

        requestAccount_grpSex.add(requestAccount_rdoMale);
        requestAccount_rdoMale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_rdoMale.setSelected(true);
        requestAccount_rdoMale.setText("Male");

        requestAccount_grpSex.add(requestAccount_rdoFemale);
        requestAccount_rdoFemale.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_rdoFemale.setText("Female");

        requestAccount_lblAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblAge.setText("Age");

        requestAccount_spnAge.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_spnAge.setModel(new javax.swing.SpinnerNumberModel(18, 1, 100, 1));

        requestAccount_btnRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_btnRequest.setText("Request Account");
        requestAccount_btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestAccount_btnRequestActionPerformed(evt);
            }
        });

        requestAccount_btnCancel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_btnCancel.setText("Cancel");
        requestAccount_btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestAccount_btnCancelActionPerformed(evt);
            }
        });

        requestAccount_lblPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        requestAccount_lblPassword.setText("Password");

        requestAccount_txtAddress.setColumns(20);
        requestAccount_txtAddress.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        requestAccount_txtAddress.setLineWrap(true);
        requestAccount_txtAddress.setRows(5);
        jScrollPane23.setViewportView(requestAccount_txtAddress);

        javax.swing.GroupLayout panelRequestAccountLayout = new javax.swing.GroupLayout(panelRequestAccount);
        panelRequestAccount.setLayout(panelRequestAccountLayout);
        panelRequestAccountLayout.setHorizontalGroup(
            panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRequestAccountLayout.createSequentialGroup()
                .addGroup(panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRequestAccountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(requestAccount_btnCancel))
                    .addGroup(panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRequestAccountLayout.createSequentialGroup()
                            .addGap(429, 429, 429)
                            .addComponent(requestAccount_rdoMale)
                            .addGap(31, 31, 31)
                            .addComponent(requestAccount_rdoFemale))
                        .addGroup(panelRequestAccountLayout.createSequentialGroup()
                            .addGap(400, 400, 400)
                            .addGroup(panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(requestAccount_lblPassword)
                                .addComponent(requestAccount_lblSex)
                                .addComponent(requestAccount_lblAddress)
                                .addComponent(requestAccount_lblSurname)
                                .addComponent(requestAccount_lblFirst)
                                .addComponent(requestAccount_txtFirst)
                                .addComponent(requestAccount_txtSurname)
                                .addComponent(requestAccount_spnAge)
                                .addComponent(requestAccount_lblAge)
                                .addComponent(requestAccount_txtPassword)
                                .addComponent(jScrollPane23)))))
                .addContainerGap(394, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRequestAccountLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(requestAccount_btnRequest)
                .addGap(423, 423, 423))
        );
        panelRequestAccountLayout.setVerticalGroup(
            panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRequestAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(requestAccount_btnCancel)
                .addGap(163, 163, 163)
                .addComponent(requestAccount_lblFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestAccount_txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestAccount_lblSurname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestAccount_txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestAccount_lblAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane23, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(requestAccount_lblSex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRequestAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestAccount_rdoMale)
                    .addComponent(requestAccount_rdoFemale))
                .addGap(18, 18, 18)
                .addComponent(requestAccount_lblAge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestAccount_spnAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestAccount_lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(requestAccount_txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestAccount_btnRequest)
                .addContainerGap(256, Short.MAX_VALUE))
        );

        panelAdmin.setPreferredSize(new java.awt.Dimension(1000, 1000));

        admin_lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lblWelcome.setText("Welcome");

        admin_lstDoctors.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lstDoctors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        admin_lstDoctors.setToolTipText("");
        admin_lstDoctors.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_lstDoctorsValueChanged(evt);
            }
        });
        admin_scrollPane.setViewportView(admin_lstDoctors);

        admin_lblDoctors.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lblDoctors.setText("Doctors");

        admin_btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_btnAddAccount.setText("Add Account");
        admin_btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_btnAddAccountActionPerformed(evt);
            }
        });

        admin_btnLogout.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_btnLogout.setText("Log Out");
        admin_btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_btnLogoutActionPerformed(evt);
            }
        });

        admin_btnDeleteDoctor.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_btnDeleteDoctor.setText("Delete Doctor Account");
        admin_btnDeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_btnDeleteDoctorActionPerformed(evt);
            }
        });

        admin_lblSecretaries.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lblSecretaries.setText("Secretaries");

        admin_lstSecretaries.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lstSecretaries.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        admin_lstSecretaries.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                admin_lstSecretariesValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(admin_lstSecretaries);

        admin_btnDeleteSecretary.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_btnDeleteSecretary.setText("Delete Secretary Account");
        admin_btnDeleteSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_btnDeleteSecretaryActionPerformed(evt);
            }
        });

        admin_txtFeedbackMessage.setColumns(20);
        admin_txtFeedbackMessage.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        admin_txtFeedbackMessage.setLineWrap(true);
        admin_txtFeedbackMessage.setRows(5);
        jScrollPane20.setViewportView(admin_txtFeedbackMessage);

        admin_lblFeedbackTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lblFeedbackTitle.setText("Feedback Message");

        admin_btnProvideFeedback.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_btnProvideFeedback.setText("Provide Feedback");
        admin_btnProvideFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_btnProvideFeedbackActionPerformed(evt);
            }
        });

        admin_lblPatientCommentsTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lblPatientCommentsTitle.setText("Patient Comments");

        admin_lstComments.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        admin_lstComments.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane21.setViewportView(admin_lstComments);

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin);
        panelAdmin.setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addComponent(admin_btnAddAccount)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdminLayout.createSequentialGroup()
                        .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelAdminLayout.createSequentialGroup()
                                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(admin_lblSecretaries)
                                    .addComponent(admin_btnDeleteSecretary, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(admin_lblDoctors)
                                    .addComponent(admin_scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(admin_btnDeleteDoctor, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane20)
                                    .addComponent(admin_btnProvideFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(panelAdminLayout.createSequentialGroup()
                                        .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(admin_lblFeedbackTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(admin_lblPatientCommentsTitle))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane21, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)))
                            .addGroup(panelAdminLayout.createSequentialGroup()
                                .addComponent(admin_lblWelcome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(admin_btnLogout)))
                        .addGap(20, 20, 20))))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_btnLogout)
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(admin_lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admin_lblDoctors, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(admin_lblSecretaries))
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(admin_scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelAdminLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(admin_lblFeedbackTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(admin_btnProvideFeedback)
                        .addGap(36, 36, 36)
                        .addComponent(admin_lblPatientCommentsTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane21)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admin_btnDeleteDoctor)
                    .addComponent(admin_btnDeleteSecretary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(admin_btnAddAccount)
                .addGap(66, 66, 66))
        );

        panelAddAccount.setPreferredSize(new java.awt.Dimension(1000, 1000));

        addAccount_lblFirst.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_lblFirst.setText("First name");

        addAccount_txtFirst.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        addAccount_lblLast.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_lblLast.setText("Last Name");

        addAccount_txtLast.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        addAccount_lblAddress.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_lblAddress.setText("Address");

        addAccount_lblPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_lblPassword.setText("Password");

        addAccount_txtPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        addAccount_cmbAccountType.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_cmbAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Secretary", "Doctor", "Admin" }));

        addAccount_btnAddAccount.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_btnAddAccount.setText("Add Account");
        addAccount_btnAddAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccount_btnAddAccountActionPerformed(evt);
            }
        });

        addAccount_btnBack.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        addAccount_btnBack.setText("Cancel");
        addAccount_btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccount_btnBackActionPerformed(evt);
            }
        });

        addAccount_txtAddress.setColumns(20);
        addAccount_txtAddress.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        addAccount_txtAddress.setLineWrap(true);
        addAccount_txtAddress.setRows(5);
        jScrollPane22.setViewportView(addAccount_txtAddress);

        javax.swing.GroupLayout panelAddAccountLayout = new javax.swing.GroupLayout(panelAddAccount);
        panelAddAccount.setLayout(panelAddAccountLayout);
        panelAddAccountLayout.setHorizontalGroup(
            panelAddAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAddAccountLayout.createSequentialGroup()
                .addGroup(panelAddAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAddAccountLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addAccount_btnBack))
                    .addGroup(panelAddAccountLayout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addComponent(addAccount_btnAddAccount))
                    .addGroup(panelAddAccountLayout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addGroup(panelAddAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addAccount_lblPassword)
                            .addComponent(addAccount_lblAddress)
                            .addComponent(addAccount_lblLast)
                            .addComponent(addAccount_lblFirst)
                            .addComponent(addAccount_txtFirst)
                            .addComponent(addAccount_txtLast)
                            .addComponent(addAccount_txtPassword)
                            .addComponent(addAccount_cmbAccountType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane22))))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        panelAddAccountLayout.setVerticalGroup(
            panelAddAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAddAccountLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addAccount_btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(addAccount_lblFirst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addAccount_txtFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(addAccount_lblLast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addAccount_txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(addAccount_lblAddress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane22, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addAccount_lblPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addAccount_txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(addAccount_cmbAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(addAccount_btnAddAccount)
                .addGap(297, 297, 297))
        );

        panelSecretary.setPreferredSize(new java.awt.Dimension(1000, 1000));

        secretary_lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblWelcome.setText("Welcome");

        secretary_btnLogout.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_btnLogout.setText("Log Out");
        secretary_btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretary_btnLogoutActionPerformed(evt);
            }
        });

        secretary_lstRequests.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lstRequests.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        secretary_lstRequests.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                secretary_lstRequestsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(secretary_lstRequests);

        secretary_lblRequests.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblRequests.setText("Active Requests");

        secretary_btnDeleteRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_btnDeleteRequest.setText("Delete Request");
        secretary_btnDeleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretary_btnDeleteRequestActionPerformed(evt);
            }
        });

        secretary_btnConfirmRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_btnConfirmRequest.setText("Confirm Request");
        secretary_btnConfirmRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretary_btnConfirmRequestActionPerformed(evt);
            }
        });

        secretary_lstStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lstStock.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        secretary_lstStock.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                secretary_lstStockValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(secretary_lstStock);

        secretary_lblStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblStock.setText("Stock");

        secretary_txtStockName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        secretary_lblStockItemName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblStockItemName.setText("Item Name");

        secretary_lblQuantity.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblQuantity.setText("Quantity");

        secretary_spnQuantity.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_spnQuantity.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        secretary_btnAddStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_btnAddStock.setText("Replenish Stock");
        secretary_btnAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretary_btnAddStockActionPerformed(evt);
            }
        });

        secretary_lblPatients.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lblPatients.setText("Patient Accounts");

        secretary_lstPatients.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_lstPatients.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        secretary_lstPatients.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                secretary_lstPatientsValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(secretary_lstPatients);

        secretary_btnDeleteAccount.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        secretary_btnDeleteAccount.setText("Delete Selected Account");
        secretary_btnDeleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secretary_btnDeleteAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSecretaryLayout = new javax.swing.GroupLayout(panelSecretary);
        panelSecretary.setLayout(panelSecretaryLayout);
        panelSecretaryLayout.setHorizontalGroup(
            panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSecretaryLayout.createSequentialGroup()
                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(secretary_lblWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(secretary_btnLogout))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane6)
                            .addComponent(secretary_lblPatients)
                            .addComponent(secretary_btnDeleteAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSecretaryLayout.createSequentialGroup()
                                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_lblStockItemName)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_lblQuantity)
                                        .addGap(152, 152, 152))
                                    .addComponent(secretary_spnQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_lblRequests)
                                        .addGap(303, 303, 303))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_btnDeleteRequest)
                                        .addGap(117, 117, 117)
                                        .addComponent(secretary_btnConfirmRequest)
                                        .addGap(147, 147, 147))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_lblStock)
                                        .addGap(343, 343, 343))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecretaryLayout.createSequentialGroup()
                                        .addComponent(secretary_btnAddStock)
                                        .addGap(277, 277, 277)))))))
                .addContainerGap())
        );
        panelSecretaryLayout.setVerticalGroup(
            panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSecretaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secretary_lblWelcome)
                    .addComponent(secretary_btnLogout))
                .addGap(35, 35, 35)
                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                        .addComponent(secretary_lblPatients)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6))
                    .addGroup(panelSecretaryLayout.createSequentialGroup()
                        .addComponent(secretary_lblRequests)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secretary_btnDeleteRequest)
                            .addComponent(secretary_btnConfirmRequest))
                        .addGap(18, 18, 18)
                        .addComponent(secretary_lblStock)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secretary_lblStockItemName)
                            .addComponent(secretary_lblQuantity))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secretary_txtStockName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(secretary_spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSecretaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secretary_btnAddStock)
                    .addComponent(secretary_btnDeleteAccount))
                .addGap(100, 100, 100))
        );

        panelDoctor.setPreferredSize(new java.awt.Dimension(1000, 1000));

        doctor_lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_lblWelcome.setText("Welcome");

        doctor_btnLogout.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnLogout.setText("Log Out");
        doctor_btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnLogoutActionPerformed(evt);
            }
        });

        doctor_lblRating.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_lblRating.setText("Your rating is: ");

        doctor_lstSchedule.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_lstSchedule.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(doctor_lstSchedule);

        doctor_txtSchedule.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_txtSchedule.setText("Upcoming Schedule");

        doctor_grpSchedule.add(doctor_btnBookings);
        doctor_btnBookings.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnBookings.setText("Bookings");
        doctor_btnBookings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnBookingsActionPerformed(evt);
            }
        });

        doctor_grpSchedule.add(doctor_btnSchedule);
        doctor_btnSchedule.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnSchedule.setSelected(true);
        doctor_btnSchedule.setText("Entire Schedule");
        doctor_btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnScheduleActionPerformed(evt);
            }
        });

        doctor_grpSchedule.add(doctor_btnFreeDays);
        doctor_btnFreeDays.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnFreeDays.setText("Free Days");
        doctor_btnFreeDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnFreeDaysActionPerformed(evt);
            }
        });

        doctor_btnTakeAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnTakeAppointment.setText("Take Appointment");
        doctor_btnTakeAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnTakeAppointmentActionPerformed(evt);
            }
        });

        doctor_btnScheduleWeek.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnScheduleWeek.setText("Schedule New Week");
        doctor_btnScheduleWeek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnScheduleWeekActionPerformed(evt);
            }
        });

        doctor_lblOrderStockTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_lblOrderStockTitle.setText("Order Stock");

        doctor_txtStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        doctor_btnRequestStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_btnRequestStock.setText("Request");
        doctor_btnRequestStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctor_btnRequestStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDoctorLayout = new javax.swing.GroupLayout(panelDoctor);
        panelDoctor.setLayout(panelDoctorLayout);
        panelDoctorLayout.setHorizontalGroup(
            panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoctorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDoctorLayout.createSequentialGroup()
                        .addComponent(doctor_lblWelcome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 823, Short.MAX_VALUE)
                        .addComponent(doctor_btnLogout))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoctorLayout.createSequentialGroup()
                        .addGap(0, 567, Short.MAX_VALUE)
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoctorLayout.createSequentialGroup()
                                .addComponent(doctor_lblOrderStockTitle)
                                .addGap(168, 168, 168))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoctorLayout.createSequentialGroup()
                                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(doctor_txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                                        .addComponent(doctor_btnTakeAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(doctor_btnScheduleWeek, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(doctor_btnRequestStock, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDoctorLayout.createSequentialGroup()
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(doctor_btnBookings))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelDoctorLayout.createSequentialGroup()
                                .addComponent(doctor_lblRating)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doctor_txtSchedule)
                            .addGroup(panelDoctorLayout.createSequentialGroup()
                                .addComponent(doctor_btnSchedule)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doctor_btnFreeDays)))
                        .addGap(35, 35, 35)))
                .addContainerGap())
        );
        panelDoctorLayout.setVerticalGroup(
            panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDoctorLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctor_lblWelcome)
                    .addComponent(doctor_btnLogout))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctor_lblRating)
                    .addComponent(doctor_txtSchedule))
                .addGap(21, 21, 21)
                .addGroup(panelDoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doctor_btnSchedule)
                    .addComponent(doctor_btnFreeDays)
                    .addComponent(doctor_btnBookings))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctor_btnTakeAppointment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctor_btnScheduleWeek)
                .addGap(18, 18, 18)
                .addComponent(doctor_lblOrderStockTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctor_txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctor_btnRequestStock)
                .addGap(178, 178, 178))
        );

        panelPatient.setPreferredSize(new java.awt.Dimension(1000, 1000));

        patient_lblWelcome.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_lblWelcome.setText("Welcome");

        patient_btnLogout.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_btnLogout.setText("Log Out");
        patient_btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient_btnLogoutActionPerformed(evt);
            }
        });

        patient_btnDelete.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_btnDelete.setText("Delete Account");
        patient_btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient_btnDeleteActionPerformed(evt);
            }
        });

        jScrollPane2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        patient_lstDoctors.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        patient_lstDoctors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        patient_lstDoctors.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                patient_lstDoctorsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(patient_lstDoctors);

        patient_lblDoctors.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_lblDoctors.setText("Doctors");

        patient_btnProvideFeedback.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_btnProvideFeedback.setText("Rate Doctor");
        patient_btnProvideFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient_btnProvideFeedbackActionPerformed(evt);
            }
        });

        patient_btnRequestAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_btnRequestAppointment.setText("Request Appointment");
        patient_btnRequestAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient_btnRequestAppointmentActionPerformed(evt);
            }
        });

        jScrollPane8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        patient_lstAvailability.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        patient_lstAvailability.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(patient_lstAvailability);

        patitent_lblAvailability.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patitent_lblAvailability.setText("Availability");

        patient_lblNextAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_lblNextAppointment.setText("Your next appointment is...");

        patient_lblActiveAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_lblActiveAppointment.setForeground(new java.awt.Color(255, 0, 0));
        patient_lblActiveAppointment.setText("You already have an active appointment");

        jScrollPane13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jScrollPane13.setPreferredSize(new java.awt.Dimension(630, 397));

        patient_lstHistory.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        patient_lstHistory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        patient_lstHistory.setFixedCellWidth(628);
        patient_lstHistory.setPreferredSize(null);
        jScrollPane13.setViewportView(patient_lstHistory);

        patient_lblHistoryTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_lblHistoryTitle.setText("Your previous appointments");

        patient_txtNextAppointment.setEditable(false);
        patient_txtNextAppointment.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N

        patient_btnViewPrescription.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        patient_btnViewPrescription.setText("View Prescription");
        patient_btnViewPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patient_btnViewPrescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPatientLayout = new javax.swing.GroupLayout(panelPatient);
        panelPatient.setLayout(panelPatientLayout);
        panelPatientLayout.setHorizontalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(patient_lblWelcome))
                    .addGroup(panelPatientLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(patient_lblDoctors)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(patient_btnProvideFeedback, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patient_lblActiveAppointment)
                            .addGroup(panelPatientLayout.createSequentialGroup()
                                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(patitent_lblAvailability)
                                    .addComponent(patient_btnRequestAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(patient_txtNextAppointment)
                                    .addGroup(panelPatientLayout.createSequentialGroup()
                                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(patient_lblNextAppointment)
                                            .addComponent(patient_lblHistoryTitle))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                                    .addComponent(patient_btnViewPrescription, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPatientLayout.createSequentialGroup()
                        .addGap(0, 849, Short.MAX_VALUE)
                        .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patient_btnLogout, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(patient_btnDelete, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        panelPatientLayout.setVerticalGroup(
            panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPatientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(patient_btnLogout)
                .addGap(11, 11, 11)
                .addComponent(patient_lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient_lblDoctors)
                    .addComponent(patitent_lblAvailability)
                    .addComponent(patient_lblNextAppointment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPatientLayout.createSequentialGroup()
                        .addComponent(patient_txtNextAppointment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(patient_lblHistoryTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(panelPatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patient_btnProvideFeedback)
                    .addComponent(patient_btnRequestAppointment)
                    .addComponent(patient_btnViewPrescription))
                .addGap(3, 3, 3)
                .addComponent(patient_lblActiveAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249)
                .addComponent(patient_btnDelete)
                .addGap(20, 20, 20))
        );

        panelFeedback.setPreferredSize(new java.awt.Dimension(1000, 1000));

        feedback_sldRating.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        feedback_sldRating.setMajorTickSpacing(1);
        feedback_sldRating.setMaximum(5);
        feedback_sldRating.setMinorTickSpacing(1);
        feedback_sldRating.setPaintLabels(true);
        feedback_sldRating.setPaintTicks(true);
        feedback_sldRating.setSnapToTicks(true);
        feedback_sldRating.setValue(0);

        feedback_lblRating.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        feedback_lblRating.setText("Rating /5");

        feedback_lblComments.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        feedback_lblComments.setText("Additional Comments");

        feedback_txtComments.setColumns(20);
        feedback_txtComments.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        feedback_txtComments.setLineWrap(true);
        feedback_txtComments.setRows(5);
        jScrollPane3.setViewportView(feedback_txtComments);

        feedback_btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        feedback_btnSubmit.setText("Submit Feedback");
        feedback_btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedback_btnSubmitActionPerformed(evt);
            }
        });

        feedback_btnBack.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        feedback_btnBack.setText("Back");
        feedback_btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                feedback_btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFeedbackLayout = new javax.swing.GroupLayout(panelFeedback);
        panelFeedback.setLayout(panelFeedbackLayout);
        panelFeedbackLayout.setHorizontalGroup(
            panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFeedbackLayout.createSequentialGroup()
                .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(feedback_btnBack))
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addGap(286, 286, 286)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addGap(393, 393, 393)
                        .addGroup(panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(feedback_lblComments)
                            .addComponent(feedback_lblRating)
                            .addComponent(feedback_sldRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelFeedbackLayout.createSequentialGroup()
                        .addGap(430, 430, 430)
                        .addComponent(feedback_btnSubmit)))
                .addContainerGap(306, Short.MAX_VALUE))
        );
        panelFeedbackLayout.setVerticalGroup(
            panelFeedbackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFeedbackLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(feedback_btnBack)
                .addGap(247, 247, 247)
                .addComponent(feedback_lblRating)
                .addGap(18, 18, 18)
                .addComponent(feedback_sldRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(feedback_lblComments)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(feedback_btnSubmit)
                .addContainerGap(345, Short.MAX_VALUE))
        );

        panelViewAvailability.setPreferredSize(new java.awt.Dimension(1000, 1000));

        availability_lstSchedule.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        availability_lstSchedule.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane9.setViewportView(availability_lstSchedule);

        availability_btnAssign.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        availability_btnAssign.setText("Assign Appointment");
        availability_btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availability_btnAssignActionPerformed(evt);
            }
        });

        availability_lstDoctors.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        availability_lstDoctors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availability_lstDoctors.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                availability_lstDoctorsValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(availability_lstDoctors);

        availability_txtTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        availability_txtTitle.setText("Request");

        availability_lblRequest.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        availability_lblRequest.setText("Request");

        javax.swing.GroupLayout panelViewAvailabilityLayout = new javax.swing.GroupLayout(panelViewAvailability);
        panelViewAvailability.setLayout(panelViewAvailabilityLayout);
        panelViewAvailabilityLayout.setHorizontalGroup(
            panelViewAvailabilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewAvailabilityLayout.createSequentialGroup()
                .addGroup(panelViewAvailabilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelViewAvailabilityLayout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addGroup(panelViewAvailabilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(availability_lblRequest)
                            .addGroup(panelViewAvailabilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane9)
                                .addComponent(jScrollPane10))
                            .addComponent(availability_txtTitle)))
                    .addGroup(panelViewAvailabilityLayout.createSequentialGroup()
                        .addGap(389, 389, 389)
                        .addComponent(availability_btnAssign)))
                .addContainerGap(400, Short.MAX_VALUE))
        );
        panelViewAvailabilityLayout.setVerticalGroup(
            panelViewAvailabilityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelViewAvailabilityLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(availability_txtTitle)
                .addGap(18, 18, 18)
                .addComponent(availability_lblRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(availability_btnAssign)
                .addGap(385, 385, 385))
        );

        panelAppointment.setPreferredSize(new java.awt.Dimension(1000, 1000));

        appointment_lblPatientTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblPatientTitle.setText("Patient:");

        appointment_lblPatient.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblPatient.setText("NAME");

        appointment_lblDoctorTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblDoctorTitle.setText("Doctor:");

        appointment_lblDoctor.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblDoctor.setText("NAME");

        appointment_txtNotes.setColumns(20);
        appointment_txtNotes.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        appointment_txtNotes.setRows(5);
        appointment_txtNotes.setWrapStyleWord(true);
        jScrollPane12.setViewportView(appointment_txtNotes);
        appointment_txtNotes.setLineWrap(true);

        appointment_lblNotesTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblNotesTitle.setText("Notes");

        appointment_chkPrescription.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_chkPrescription.setText("Prescripton Needed");
        appointment_chkPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointment_chkPrescriptionActionPerformed(evt);
            }
        });

        appointment_chkAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_chkAppointment.setText("Further Appointment Needed");
        appointment_chkAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointment_chkAppointmentActionPerformed(evt);
            }
        });

        appointment_lblPrescriptionTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblPrescriptionTitle.setText("Prescription");
        appointment_lblPrescriptionTitle.setEnabled(false);

        appointment_txtMedicine.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_txtMedicine.setEnabled(false);

        appointment_spnQuantity.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_spnQuantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        appointment_spnQuantity.setEnabled(false);

        appointment_lblAppointmentTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblAppointmentTitle.setText("Appointment Date");
        appointment_lblAppointmentTitle.setEnabled(false);

        appointment_spnDate.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_spnDate.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        appointment_spnDate.setEnabled(false);

        appointment_lblNextAppointmentTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblNextAppointmentTitle.setText("Next appointment in");
        appointment_lblNextAppointmentTitle.setEnabled(false);

        appointment_grpSchedule.add(appointment_rdoDays);
        appointment_rdoDays.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_rdoDays.setSelected(true);
        appointment_rdoDays.setText("Days");
        appointment_rdoDays.setEnabled(false);

        appointment_grpSchedule.add(appointment_rdoMonths);
        appointment_rdoMonths.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_rdoMonths.setText("Months");
        appointment_rdoMonths.setEnabled(false);

        appointment_grpSchedule.add(appointment_rdoYears);
        appointment_rdoYears.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_rdoYears.setText("Years");
        appointment_rdoYears.setEnabled(false);

        appointment_btnProcessAppointment.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_btnProcessAppointment.setText("Process Booking");
        appointment_btnProcessAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointment_btnProcessAppointmentActionPerformed(evt);
            }
        });

        appointment_lstHistory.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lstHistory.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane14.setViewportView(appointment_lstHistory);

        doctor_lblHistoryTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        doctor_lblHistoryTitle.setText("Patient History");

        appointment_txtPrescriptionGuide.setColumns(20);
        appointment_txtPrescriptionGuide.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        appointment_txtPrescriptionGuide.setLineWrap(true);
        appointment_txtPrescriptionGuide.setRows(3);
        appointment_txtPrescriptionGuide.setEnabled(false);
        jScrollPane15.setViewportView(appointment_txtPrescriptionGuide);

        appointment_lblDosageTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        appointment_lblDosageTitle.setText("Dosage Guidelines");
        appointment_lblDosageTitle.setEnabled(false);

        javax.swing.GroupLayout panelAppointmentLayout = new javax.swing.GroupLayout(panelAppointment);
        panelAppointment.setLayout(panelAppointmentLayout);
        panelAppointmentLayout.setHorizontalGroup(
            panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAppointmentLayout.createSequentialGroup()
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAppointmentLayout.createSequentialGroup()
                                .addComponent(appointment_lblDoctorTitle)
                                .addGap(18, 18, 18)
                                .addComponent(appointment_lblDoctor))
                            .addGroup(panelAppointmentLayout.createSequentialGroup()
                                .addComponent(appointment_lblPatientTitle)
                                .addGap(18, 18, 18)
                                .addComponent(appointment_lblPatient))
                            .addComponent(appointment_lblNotesTitle)))
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(appointment_chkPrescription)
                        .addGap(65, 65, 65)
                        .addComponent(appointment_chkAppointment))
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelAppointmentLayout.createSequentialGroup()
                                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(appointment_lblDosageTitle)
                                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                                        .addComponent(appointment_txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(appointment_spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(appointment_lblAppointmentTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAppointmentLayout.createSequentialGroup()
                                        .addComponent(appointment_lblNextAppointmentTitle)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(appointment_spnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(appointment_rdoMonths)
                                            .addComponent(appointment_rdoDays)
                                            .addComponent(appointment_rdoYears)))))
                            .addComponent(jScrollPane12)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctor_lblHistoryTitle, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(appointment_lblPrescriptionTitle, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAppointmentLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(appointment_btnProcessAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(300, 300, 300))
        );
        panelAppointmentLayout.setVerticalGroup(
            panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAppointmentLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appointment_lblPatientTitle)
                    .addComponent(appointment_lblPatient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appointment_lblDoctorTitle)
                    .addComponent(appointment_lblDoctor))
                .addGap(66, 66, 66)
                .addComponent(appointment_lblNotesTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(appointment_chkPrescription)
                    .addComponent(appointment_chkAppointment))
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(appointment_lblAppointmentTitle))
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(appointment_lblPrescriptionTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(appointment_spnQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appointment_txtMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appointment_lblDosageTitle)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(doctor_lblHistoryTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelAppointmentLayout.createSequentialGroup()
                        .addComponent(appointment_rdoDays)
                        .addGap(18, 18, 18)
                        .addGroup(panelAppointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(appointment_rdoMonths)
                            .addComponent(appointment_spnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(appointment_lblNextAppointmentTitle))
                        .addGap(18, 18, 18)
                        .addComponent(appointment_rdoYears)
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(appointment_btnProcessAppointment)
                .addGap(74, 74, 74))
        );

        panelPrescription.setPreferredSize(new java.awt.Dimension(1000, 1000));

        prescription_llPatientTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        prescription_llPatientTitle.setText("Patient");

        jScrollPane11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        prescription_txtPatient.setEditable(false);
        prescription_txtPatient.setBackground(java.awt.SystemColor.control);
        prescription_txtPatient.setColumns(20);
        prescription_txtPatient.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        prescription_txtPatient.setLineWrap(true);
        prescription_txtPatient.setRows(5);
        jScrollPane11.setViewportView(prescription_txtPatient);

        prescription_txtDosage.setEditable(false);
        prescription_txtDosage.setBackground(java.awt.SystemColor.control);
        prescription_txtDosage.setColumns(20);
        prescription_txtDosage.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        prescription_txtDosage.setLineWrap(true);
        prescription_txtDosage.setRows(5);
        jScrollPane16.setViewportView(prescription_txtDosage);

        prescription_lblDoctorTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        prescription_lblDoctorTitle.setText("Doctor");

        prescription_lblNotesTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        prescription_lblNotesTitle.setText("Notes");

        jScrollPane18.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        prescription_txtDoctor.setEditable(false);
        prescription_txtDoctor.setBackground(java.awt.SystemColor.control);
        prescription_txtDoctor.setColumns(20);
        prescription_txtDoctor.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        prescription_txtDoctor.setLineWrap(true);
        prescription_txtDoctor.setRows(5);
        jScrollPane18.setViewportView(prescription_txtDoctor);

        prescription_lblDosageTitle.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        prescription_lblDosageTitle.setText("Dosage");

        prescription_txtNotes.setEditable(false);
        prescription_txtNotes.setBackground(java.awt.SystemColor.control);
        prescription_txtNotes.setColumns(20);
        prescription_txtNotes.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        prescription_txtNotes.setLineWrap(true);
        prescription_txtNotes.setRows(5);
        jScrollPane19.setViewportView(prescription_txtNotes);

        prescription_btnBack.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        prescription_btnBack.setText("Back");
        prescription_btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prescription_btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrescriptionLayout = new javax.swing.GroupLayout(panelPrescription);
        panelPrescription.setLayout(panelPrescriptionLayout);
        panelPrescriptionLayout.setHorizontalGroup(
            panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrescriptionLayout.createSequentialGroup()
                .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrescriptionLayout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prescription_lblDosageTitle)
                            .addComponent(prescription_lblNotesTitle)
                            .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelPrescriptionLayout.createSequentialGroup()
                                    .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelPrescriptionLayout.createSequentialGroup()
                                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrescriptionLayout.createSequentialGroup()
                                            .addComponent(prescription_llPatientTitle)
                                            .addGap(345, 345, 345)))
                                    .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(prescription_lblDoctorTitle)
                                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(panelPrescriptionLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(prescription_btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(202, Short.MAX_VALUE))
        );
        panelPrescriptionLayout.setVerticalGroup(
            panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrescriptionLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(prescription_btnBack)
                .addGap(18, 18, 18)
                .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prescription_llPatientTitle)
                    .addComponent(prescription_lblDoctorTitle))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(prescription_lblNotesTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(prescription_lblDosageTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(380, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1920, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAddAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelSecretary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelRequestAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelViewAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10000, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAddAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelSecretary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelRequestAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelViewAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        panelRequestAccount.setVisible(false);
        panelAdmin.setVisible(false);
        panelAddAccount.setVisible(false);
        panelSecretary.setVisible(false);
        panelDoctor.setVisible(false);
        panelPatient.setVisible(false);
        panelFeedback.setVisible(false);
        panelViewAvailability.setVisible(false);
        panelAppointment.setVisible(false);
        panelPrescription.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void login_btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnLoginActionPerformed
        AccountType acct = controller.login(login_txtUsername.getText(), login_txtPassword.getPassword());
        
        if (acct != null)
        {
            switch (acct)
            {
                case ADMIN:
                    cleanUI(panelLogin, panelAdmin);
                    break;
                case SECRETARY:
                    cleanUI(panelLogin, panelSecretary);
                    break;
                case DOCTOR:
                    cleanUI(panelLogin, panelDoctor);
                    break;
                case PATIENT:
                    cleanUI(panelLogin, panelPatient);
                    break;
                default:
                    login_lblErrorMessage.setText("Invalid login, please try again");
            }
            viewNotifications();
        }        
        else
            login_lblErrorMessage.setText("Invalid login, please try again");
        
        
        
    }//GEN-LAST:event_login_btnLoginActionPerformed

    private void admin_btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_btnLogoutActionPerformed
        logout();
    }//GEN-LAST:event_admin_btnLogoutActionPerformed

    private void addAccount_btnAddAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccount_btnAddAccountActionPerformed
        String first; String last; String address;
        char[] password;
        String accountType;
                
        first = addAccount_txtFirst.getText();
        last = addAccount_txtLast.getText();
        address = addAccount_txtAddress.getText();
        
        password = addAccount_txtPassword.getPassword();
        accountType = addAccount_cmbAccountType.getSelectedItem().toString();
        
        String id = adminController.addAccount(first, last, address, password, accountType);
        
        JOptionPane.showMessageDialog(null, "Their id is: " + id, "Unique ID", JOptionPane.INFORMATION_MESSAGE);
        cleanUI(panelAddAccount, panelAdmin);
    }//GEN-LAST:event_addAccount_btnAddAccountActionPerformed

    private void admin_btnAddAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_btnAddAccountActionPerformed
        cleanUI(panelAdmin, panelAddAccount);
    }//GEN-LAST:event_admin_btnAddAccountActionPerformed

    private void secretary_btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretary_btnLogoutActionPerformed
        logout();
    }//GEN-LAST:event_secretary_btnLogoutActionPerformed

    private void admin_btnDeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_btnDeleteDoctorActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this doctor account?", "Confirm delete", JOptionPane.YES_NO_OPTION);
        //0=yes, 1=no
        if (input == 0)
            adminController.deleteSelected(admin_lstDoctors.getSelectedValue());
        cleanAdmin();
    }//GEN-LAST:event_admin_btnDeleteDoctorActionPerformed

    private void doctor_btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnLogoutActionPerformed
        logout();
    }//GEN-LAST:event_doctor_btnLogoutActionPerformed

    private void login_btnRequestAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnRequestAccountActionPerformed
        cleanUI(panelLogin, panelRequestAccount);
    }//GEN-LAST:event_login_btnRequestAccountActionPerformed

    private void requestAccount_btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestAccount_btnCancelActionPerformed
        cleanUI(panelRequestAccount, panelLogin);
    }//GEN-LAST:event_requestAccount_btnCancelActionPerformed

    private void requestAccount_btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestAccount_btnRequestActionPerformed
        String first; String last; String address;
        String sex; int age; char[] password;
        
        first = requestAccount_txtFirst.getText();
        last = requestAccount_txtSurname.getText();
        address = requestAccount_txtAddress.getText();
        
        if (requestAccount_rdoMale.isEnabled())
            sex = "M";
        else
            sex = "F";
        
        age = (int)requestAccount_spnAge.getValue();
        password = requestAccount_txtPassword.getPassword();
        patientController.requestCreation(first, last, address, sex, age, password);
        
        JOptionPane.showMessageDialog(null, "We have received your request. Once it has been approved, you will be able to log in", "Request processed", JOptionPane.INFORMATION_MESSAGE);
        
        cleanUI(panelRequestAccount, panelLogin);
    }//GEN-LAST:event_requestAccount_btnRequestActionPerformed

    private void secretary_btnDeleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretary_btnDeleteRequestActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "This will permanently delete this request. Do you want to continue?", "Confirm delete", JOptionPane.YES_NO_OPTION);
        //0=yes, 1=no
        if (input == 0)
            secretaryController.deleteRequest(secretary_lstRequests.getSelectedValue());
        cleanSecretary();
    }//GEN-LAST:event_secretary_btnDeleteRequestActionPerformed

    private void secretary_btnConfirmRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretary_btnConfirmRequestActionPerformed
        String output = secretaryController.authoriseRequest(secretary_lstRequests.getSelectedValue());
        String request = secretary_lstRequests.getSelectedValue();
        if (!request.contains("APPOINTMENT"))
        {     
            JOptionPane.showMessageDialog(null, output, "Request approved", JOptionPane.INFORMATION_MESSAGE);
            cleanSecretary();
        }
        else
        {           
            cleanUI(panelSecretary, panelViewAvailability);
            availability_lblRequest.setText(request);
        }
    }//GEN-LAST:event_secretary_btnConfirmRequestActionPerformed

    private void patient_btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient_btnLogoutActionPerformed
        logout();
    }//GEN-LAST:event_patient_btnLogoutActionPerformed

    private void patient_btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient_btnDeleteActionPerformed
        patientController.requestDeletion();
      
        JOptionPane.showMessageDialog(null, "Your request has been processed, and must be approved by a secretary", "Request approved", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_patient_btnDeleteActionPerformed

    
    private String strDoctor;
    private void patient_btnProvideFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient_btnProvideFeedbackActionPerformed
        strDoctor = patient_lstDoctors.getSelectedValue();
        cleanUI(panelPatient, panelFeedback);
    }//GEN-LAST:event_patient_btnProvideFeedbackActionPerformed

    private void feedback_btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedback_btnSubmitActionPerformed
        int rating = feedback_sldRating.getValue();
        String comments = feedback_txtComments.getText();
        
        JOptionPane.showMessageDialog(null, "Thank you for your feedback, this has been processed", "Thank you for your feedback", JOptionPane.INFORMATION_MESSAGE);
        
        patientController.provideFeedback(rating, comments, strDoctor);
        cleanUI(panelFeedback, panelPatient);
    }//GEN-LAST:event_feedback_btnSubmitActionPerformed

    private void patient_lstDoctorsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_patient_lstDoctorsValueChanged
        if (patient_lstDoctors.getSelectedValue() != null)
        {
            patient_btnProvideFeedback.setEnabled(true);
            patient_lstAvailability.setListData(patientController.viewDoctorAvailability(patient_lstDoctors.getSelectedValue()));
        }
        else
        {
            patient_btnProvideFeedback.setEnabled(false);
            patient_lstAvailability.setListData(new String[0]);
        }       
    }//GEN-LAST:event_patient_lstDoctorsValueChanged

    private void feedback_btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedback_btnBackActionPerformed
        cleanUI(panelFeedback, panelPatient);
    }//GEN-LAST:event_feedback_btnBackActionPerformed

    private void admin_btnDeleteSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_btnDeleteSecretaryActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this secretary account?", "Confirm delete", JOptionPane.YES_NO_OPTION);
        //0=yes, 1=no
        if (input == 0)
            adminController.deleteSelected(admin_lstSecretaries.getSelectedValue());
        cleanAdmin();
    }//GEN-LAST:event_admin_btnDeleteSecretaryActionPerformed

    private void admin_lstDoctorsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_lstDoctorsValueChanged
        if (admin_lstDoctors.getSelectedValue() != null)
        {
            admin_btnDeleteDoctor.setEnabled(true);
            admin_lstComments.setListData(adminController.viewFeedback(admin_lstDoctors.getSelectedValue()));
        }
        else
            admin_btnDeleteDoctor.setEnabled(false);
    }//GEN-LAST:event_admin_lstDoctorsValueChanged

    private void admin_lstSecretariesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_admin_lstSecretariesValueChanged
        if (admin_lstSecretaries.getSelectedValue() != null)
            admin_btnDeleteSecretary.setEnabled(true);
        else
            admin_btnDeleteSecretary.setEnabled(false);
    }//GEN-LAST:event_admin_lstSecretariesValueChanged

    private void secretary_lstStockValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_secretary_lstStockValueChanged
        if (secretary_lstStock.getSelectedValue() != null)
            secretary_txtStockName.setText(secretaryController.getStockName(secretary_lstStock.getSelectedValue()));
    }//GEN-LAST:event_secretary_lstStockValueChanged

    private void secretary_btnAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretary_btnAddStockActionPerformed
        String name = secretary_txtStockName.getText();
        int quantity = (int)secretary_spnQuantity.getValue();
        
        secretaryController.addToStock(name, quantity);
        cleanSecretary();
    }//GEN-LAST:event_secretary_btnAddStockActionPerformed

    private void secretary_lstRequestsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_secretary_lstRequestsValueChanged
        if (secretary_lstRequests.getSelectedValue() != null)
        {
            secretary_btnConfirmRequest.setEnabled(true);
            secretary_btnDeleteRequest.setEnabled(true);
        }
        else
        {
            secretary_btnConfirmRequest.setEnabled(false);
            secretary_btnDeleteRequest.setEnabled(false);
        }
    }//GEN-LAST:event_secretary_lstRequestsValueChanged

    private void secretary_btnDeleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secretary_btnDeleteAccountActionPerformed
        int input = JOptionPane.showConfirmDialog(null, "Are you sure you wish to delete this patient account?", "Confirm delete", JOptionPane.YES_NO_OPTION);
        //0=yes, 1=no
        if (input == 0)
            secretaryController.deleteAccount(secretary_lstPatients.getSelectedValue());
        cleanSecretary();
    }//GEN-LAST:event_secretary_btnDeleteAccountActionPerformed

    private void secretary_lstPatientsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_secretary_lstPatientsValueChanged
        if (secretary_lstPatients.getSelectedValue() != null)
            secretary_btnDeleteAccount.setEnabled(true);
        else
            secretary_btnDeleteAccount.setEnabled(false);
    }//GEN-LAST:event_secretary_lstPatientsValueChanged


    private void patient_btnRequestAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient_btnRequestAppointmentActionPerformed
        String strRequestedDoctor = patient_lstDoctors.getSelectedValue();
        String strRequestedDate = patient_lstAvailability.getSelectedValue();
       
        if (strRequestedDoctor == null)
            JOptionPane.showMessageDialog(null, "Please select a doctor", "No doctor selected", JOptionPane.OK_OPTION);
        else if (strRequestedDate == null)
            JOptionPane.showMessageDialog(null, "Please select a date", "No date selected", JOptionPane.OK_OPTION);
        else
        {
            patientController.requestAppointment(strRequestedDoctor, strRequestedDate);
            JOptionPane.showMessageDialog(null, "Your request has been submitted", "Action processed", JOptionPane.OK_OPTION);
        }
        
        System.out.println("Selected doctor: " + strRequestedDoctor);
        //System.out.println("Selected date: " + strRequestedDate);
        
        
    }//GEN-LAST:event_patient_btnRequestAppointmentActionPerformed

    private void addAccount_btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccount_btnBackActionPerformed
        cleanUI(panelAddAccount, panelAdmin);
    }//GEN-LAST:event_addAccount_btnBackActionPerformed

    private void availability_lstDoctorsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_availability_lstDoctorsValueChanged
        String selected = availability_lstDoctors.getSelectedValue();
        if (selected != null)
            availability_lstSchedule.setListData(secretaryController.viewDoctorFreeDays(selected));
        else
            availability_lstSchedule.setListData(new String[0]);
    }//GEN-LAST:event_availability_lstDoctorsValueChanged

    private void availability_btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availability_btnAssignActionPerformed
        String request = availability_lblRequest.getText();
        String assignedDoctor = availability_lstDoctors.getSelectedValue();
        String assignedDate = availability_lstSchedule.getSelectedValue();
        
        if (assignedDoctor == null)
            JOptionPane.showMessageDialog(null, "Please select a doctor", "No doctor selected", JOptionPane.OK_OPTION);
        else if (assignedDate == null)
            JOptionPane.showMessageDialog(null, "Please select a date", "No date selected", JOptionPane.OK_OPTION);
        else
        {
        String output = secretaryController.scheduleAppointment(request, assignedDoctor, assignedDate);        
        JOptionPane.showMessageDialog(null, output, "Appointment made", JOptionPane.OK_OPTION);
        cleanUI(panelViewAvailability, panelSecretary);
        }      
    }//GEN-LAST:event_availability_btnAssignActionPerformed

    private void doctor_btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnScheduleActionPerformed
        doctor_lstSchedule.setListData(doctorController.viewSchedule());
    }//GEN-LAST:event_doctor_btnScheduleActionPerformed

    private void doctor_btnBookingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnBookingsActionPerformed
        doctor_lstSchedule.setListData(doctorController.viewBookings());
    }//GEN-LAST:event_doctor_btnBookingsActionPerformed

    private void doctor_btnFreeDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnFreeDaysActionPerformed
        doctor_lstSchedule.setListData(doctorController.viewFreeDays());
    }//GEN-LAST:event_doctor_btnFreeDaysActionPerformed

    private void doctor_btnTakeAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnTakeAppointmentActionPerformed
        String selected = doctor_lstSchedule.getSelectedValue();
        
        if (selected == null)
            JOptionPane.showMessageDialog(null, "You have not selected a booking to take", "No appointment", JOptionPane.OK_OPTION);
        else if (selected.contains("No booking"))
            JOptionPane.showMessageDialog(null, "You have no booking on this day!", "No appointment", JOptionPane.OK_OPTION);
        else
        {
            cleanUI(panelDoctor, panelAppointment);
            doctorController.setActiveAppointment(selected);
            
            appointment_lblPatient.setText(doctorController.getActiveAppointmentPatient());
            appointment_lblDoctor.setText(doctorController.getActiveAppointmentDoctor());
            appointment_lstHistory.setListData(doctorController.viewActivePatientHistory());
        }
    }//GEN-LAST:event_doctor_btnTakeAppointmentActionPerformed

    private void appointment_chkPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointment_chkPrescriptionActionPerformed
        if (appointment_chkPrescription.isSelected())
        {
            appointment_lblPrescriptionTitle.setEnabled(true);
            appointment_txtMedicine.setEnabled(true);
            appointment_spnQuantity.setEnabled(true);
            appointment_txtPrescriptionGuide.setEnabled(true);
            appointment_lblDosageTitle.setEnabled(true);
        }
        else
        {
            appointment_lblPrescriptionTitle.setEnabled(false);
            appointment_txtMedicine.setEnabled(false);
            appointment_spnQuantity.setEnabled(false);
            appointment_txtPrescriptionGuide.setEnabled(false);
            appointment_lblDosageTitle.setEnabled(false);
        }
    }//GEN-LAST:event_appointment_chkPrescriptionActionPerformed

    private void appointment_chkAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointment_chkAppointmentActionPerformed
        if (appointment_chkAppointment.isSelected())
        {
            appointment_lblAppointmentTitle.setEnabled(true);
            appointment_lblNextAppointmentTitle.setEnabled(true);
            appointment_spnDate.setEnabled(true);
            appointment_rdoDays.setEnabled(true);
            appointment_rdoMonths.setEnabled(true);
            appointment_rdoYears.setEnabled(true);
        }
        else
        {
            appointment_lblAppointmentTitle.setEnabled(false);
            appointment_lblNextAppointmentTitle.setEnabled(false);
            appointment_spnDate.setEnabled(false);
            appointment_rdoDays.setEnabled(false);
            appointment_rdoMonths.setEnabled(false);
            appointment_rdoYears.setEnabled(false);
        }
    }//GEN-LAST:event_appointment_chkAppointmentActionPerformed

    private void appointment_btnProcessAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointment_btnProcessAppointmentActionPerformed
        String notes;
        String prescriptionName = null;
        Integer prescriptionQuantity = null;
        String dosage = null;
        Integer timeQuantity = null;
        String timeFrame = null;
        
        Boolean isAppValid = true;
        Boolean isPresValid = true;
        
        if (appointment_txtNotes.getText().contentEquals(""))
        {
            JOptionPane.showMessageDialog(null, "Please provide a write-up of this appointment", "No notes", JOptionPane.OK_OPTION);
        }
        else
        {
            notes = appointment_txtNotes.getText();
        
            if (appointment_chkPrescription.isSelected())
            {
                if (appointment_txtMedicine.getText().contentEquals("") || appointment_txtPrescriptionGuide.getText().contentEquals(""))
                {
                    JOptionPane.showMessageDialog(null, "Please complete the prescription you would like to assign", "Prescription incomplete", JOptionPane.OK_OPTION);
                    isPresValid = false;
                }
                else
                {
                    prescriptionName = appointment_txtMedicine.getText();
                    prescriptionQuantity = (int)appointment_spnQuantity.getValue();
                    dosage = appointment_txtPrescriptionGuide.getText();
                }
            }
        
            if (appointment_chkAppointment.isSelected())
            {
                timeQuantity = (int)appointment_spnDate.getValue();
                if (appointment_rdoDays.isSelected())
                    timeFrame = "DAYS";
                else if (appointment_rdoMonths.isSelected())
                    timeFrame = "MONTHS";
                else if (appointment_rdoYears.isSelected())
                    timeFrame = "YEARS";
            }
            
            //System.out.println("Processing appointment with:\nNotes:\n" + notes + "\nPrescription:\n" + prescriptionName + " " + prescriptionQuantity + "\nFurther Booking:\nIn " + timeQuantity + " " + timeFrame);
            if (isAppValid == true && isPresValid == true)
            {
                doctorController.processAppointment(notes,prescriptionName, prescriptionQuantity, dosage, timeQuantity, timeFrame);
                cleanUI(panelAppointment, panelDoctor);
            }
            
            //doctorController.printAvailability();
        }
        
    }//GEN-LAST:event_appointment_btnProcessAppointmentActionPerformed

    private void doctor_btnScheduleWeekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnScheduleWeekActionPerformed
        doctorController.scheduleWeek();
        doctor_lstSchedule.setListData(doctorController.viewSchedule());
    }//GEN-LAST:event_doctor_btnScheduleWeekActionPerformed

    private void patient_btnViewPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patient_btnViewPrescriptionActionPerformed
        cleanUI(panelPatient, panelPrescription);
    }//GEN-LAST:event_patient_btnViewPrescriptionActionPerformed

    private void prescription_btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prescription_btnBackActionPerformed
        cleanUI(panelPrescription, panelPatient);
    }//GEN-LAST:event_prescription_btnBackActionPerformed

    private void doctor_btnRequestStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctor_btnRequestStockActionPerformed
        String medicineRequested = doctor_txtStock.getText();
        
        if (medicineRequested.contentEquals(""))
            JOptionPane.showMessageDialog(null, "Please specify what medicine you wish to order", "Invalid request", JOptionPane.OK_OPTION);
        else
        {
            doctorController.requestMedicine(medicineRequested);
            JOptionPane.showMessageDialog(null, "Your request has been submitted", "Request submitted", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_doctor_btnRequestStockActionPerformed

    private void admin_btnProvideFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_btnProvideFeedbackActionPerformed
        String account = admin_lstDoctors.getSelectedValue();
        String message = admin_txtFeedbackMessage.getText();
        
        if (account == null || message.contentEquals(""))
            JOptionPane.showMessageDialog(null, "Please enter a valid message for a doctor account", "Invalid selection", JOptionPane.OK_OPTION);
        else
        {
            adminController.giveFeedback(account, message);
            JOptionPane.showMessageDialog(null, "Feedback sent", "Feedback sent", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_admin_btnProvideFeedbackActionPerformed

    private void logout()
    {
        AccountType panelToShow = controller.logout();  
        
        switch (panelToShow)
        {
            case PATIENT:
                cleanUI(panelPatient, panelLogin);
                break;
            case SECRETARY:
                cleanUI(panelSecretary, panelLogin);
                break;
            case DOCTOR:
                cleanUI(panelDoctor, panelLogin);
                break;
            case ADMIN:
                cleanUI(panelAdmin, panelLogin);
                break;
        }
    }
    
    private void viewNotifications()
    {
        String[] notifications = controller.getNotifications();
        //System.out.println("No. notifications:" + notifications.length + ":GUI");
        for (String notification : notifications) {
            JOptionPane.showMessageDialog(null, notification, "Notifications", JOptionPane.OK_OPTION);
        }
    }

    
    private void cleanUI(JPanel panelToHide, JPanel panelToShow)
    {    
        
        cleanLogin();
        cleanAddAccount();
        cleanRequest();
        cleanFeedback();
        cleanAppointment();
        if (controller.getLoggedIn() != null)
        {
            if (adminController.getAuthorisingAdmin() != null)
                cleanAdmin();
            if (secretaryController.getAuthorisingSecretary() != null)
            {
                cleanSecretary();
                cleanAvailability();
            }
            if (doctorController.getAuthorisingDoctor() != null)
                cleanDoctor();
            if (patientController.getAuthorisingPatient() != null)
            {
                cleanPatient();
                if (panelToShow == panelPrescription)
                    cleanPrescription();
            }
        }
        
        panelToHide.setVisible(false);
        panelToShow.setVisible(true);
    }
    
    
    private void cleanLogin()
    {
        login_txtUsername.setText("");
        login_txtPassword.setText("");
        login_lblErrorMessage.setText("");
    }
    private void cleanAdmin()
    {
        admin_lstDoctors.setListData(adminController.viewDoctors());
        admin_lstSecretaries.setListData(adminController.viewSecretaries());
        admin_btnDeleteDoctor.setEnabled(false);
        admin_btnDeleteSecretary.setEnabled(false);
        admin_lblWelcome.setText("Logged in as: " + controller.getLoggedIn().getFirstName() + " " + controller.getLoggedIn().getSurname());
        admin_txtFeedbackMessage.setText("");
        admin_lstComments.setListData(new String[0]);
    }
    private void cleanSecretary()
    {
        secretary_lstRequests.setListData(secretaryController.viewRequests());
        secretary_lstStock.setListData(secretaryController.viewStock());
        secretary_lstPatients.setListData(secretaryController.viewPatientAccounts());
        
        secretary_btnConfirmRequest.setEnabled(false);
        secretary_btnDeleteRequest.setEnabled(false);
        secretary_btnDeleteAccount.setEnabled(false);
        
        secretary_txtStockName.setText("");
        secretary_spnQuantity.setValue(0);
        secretary_lblWelcome.setText("Logged in as: " + controller.getLoggedIn().getFirstName() + " " + controller.getLoggedIn().getSurname());
        
    }
    
    private void cleanAvailability()
    {
        availability_lstDoctors.setListData(secretaryController.viewDoctorAccounts());
        availability_lblRequest.setText("");
    }
    
    private void cleanAppointment()
    {
        appointment_txtNotes.setText("");
        appointment_chkPrescription.setSelected(false);
        appointment_chkAppointment.setSelected(false);
        appointment_txtMedicine.setText("");
        appointment_txtPrescriptionGuide.setText("");
        appointment_spnQuantity.setValue(1);
        appointment_spnDate.setValue(1);
        appointment_rdoDays.setSelected(true);
        
        appointment_lblPrescriptionTitle.setEnabled(false);
        appointment_txtMedicine.setEnabled(false);
        appointment_spnQuantity.setEnabled(false);
        appointment_lblDosageTitle.setEnabled(false);
        appointment_txtPrescriptionGuide.setEnabled(false);
            
        appointment_lblAppointmentTitle.setEnabled(false);
        appointment_lblNextAppointmentTitle.setEnabled(false);
        appointment_spnDate.setEnabled(false);
        appointment_rdoDays.setEnabled(false);
        appointment_rdoMonths.setEnabled(false);
        appointment_rdoYears.setEnabled(false);
    }
    private void cleanDoctor()
    {
        doctor_lstSchedule.setListData(doctorController.viewSchedule());
        doctor_lblWelcome.setText("Logged in as: " + controller.getLoggedIn().getFirstName() + " " + controller.getLoggedIn().getSurname());
        doctor_lblRating.setText("Your rating is: " + doctorController.getRating());
        doctor_btnSchedule.setSelected(true);
        doctor_txtStock.setText("");
        
        doctorController.printAvailability();
    }
    private void cleanPatient()
    {
        patient_lblWelcome.setText("Logged in as: " + controller.getLoggedIn().getFirstName() + " " + controller.getLoggedIn().getSurname());
        patient_btnProvideFeedback.setEnabled(false);
        patient_lstDoctors.setListData(patientController.viewDoctors());
        patient_lstHistory.setListData(patientController.viewHistory());
        
        String strAppt = patientController.viewNextAppointment();
        patient_txtNextAppointment.setText(strAppt);
        
        if (strAppt.contentEquals(""))
        {
            patient_lblActiveAppointment.setVisible(false);
            patient_btnRequestAppointment.setEnabled(true);
        }
        else
        {
            patient_lblActiveAppointment.setVisible(true);
            patient_btnRequestAppointment.setEnabled(false);
        }    
        
        if (patientController.isActivePrescription())
            patient_btnViewPrescription.setEnabled(true);
        else
            patient_btnViewPrescription.setEnabled(false);
    }
    
    private void cleanPrescription()
    {
        prescription_txtPatient.setText(patientController.viewPrescriptionPatient());
        prescription_txtDoctor.setText(patientController.viewPrescriptionDoctor());
        prescription_txtNotes.setText(patientController.viewPrescriptionNotes());
        prescription_txtDosage.setText(patientController.viewPrescriptionMedicine());
    }
    private void cleanAddAccount()
    {
        addAccount_txtFirst.setText("");
        addAccount_txtLast.setText("");
        addAccount_txtAddress.setText("");
        addAccount_txtPassword.setText("");
        addAccount_cmbAccountType.setSelectedIndex(0);
    }
    private void cleanRequest()
    {
        requestAccount_txtFirst.setText("");
        requestAccount_txtSurname.setText("");
        requestAccount_txtAddress.setText("");
        requestAccount_rdoMale.setSelected(true);
        requestAccount_rdoFemale.setSelected(false);
        requestAccount_spnAge.setValue(18);
        requestAccount_txtPassword.setText("");
    }
    private void cleanFeedback()
    {
        feedback_sldRating.setValue(0);
        feedback_txtComments.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAccount_btnAddAccount;
    private javax.swing.JButton addAccount_btnBack;
    private javax.swing.JComboBox<String> addAccount_cmbAccountType;
    private javax.swing.JLabel addAccount_lblAddress;
    private javax.swing.JLabel addAccount_lblFirst;
    private javax.swing.JLabel addAccount_lblLast;
    private javax.swing.JLabel addAccount_lblPassword;
    private javax.swing.JTextArea addAccount_txtAddress;
    private javax.swing.JTextField addAccount_txtFirst;
    private javax.swing.JTextField addAccount_txtLast;
    private javax.swing.JPasswordField addAccount_txtPassword;
    private javax.swing.JButton admin_btnAddAccount;
    private javax.swing.JButton admin_btnDeleteDoctor;
    private javax.swing.JButton admin_btnDeleteSecretary;
    private javax.swing.JButton admin_btnLogout;
    private javax.swing.JButton admin_btnProvideFeedback;
    private javax.swing.JLabel admin_lblDoctors;
    private javax.swing.JLabel admin_lblFeedbackTitle;
    private javax.swing.JLabel admin_lblPatientCommentsTitle;
    private javax.swing.JLabel admin_lblSecretaries;
    private javax.swing.JLabel admin_lblWelcome;
    private javax.swing.JList<String> admin_lstComments;
    private javax.swing.JList<String> admin_lstDoctors;
    private javax.swing.JList<String> admin_lstSecretaries;
    private javax.swing.JScrollPane admin_scrollPane;
    private javax.swing.JTextArea admin_txtFeedbackMessage;
    private javax.swing.JButton appointment_btnProcessAppointment;
    private javax.swing.JCheckBox appointment_chkAppointment;
    private javax.swing.JCheckBox appointment_chkPrescription;
    private javax.swing.ButtonGroup appointment_grpSchedule;
    private javax.swing.JLabel appointment_lblAppointmentTitle;
    private javax.swing.JLabel appointment_lblDoctor;
    private javax.swing.JLabel appointment_lblDoctorTitle;
    private javax.swing.JLabel appointment_lblDosageTitle;
    private javax.swing.JLabel appointment_lblNextAppointmentTitle;
    private javax.swing.JLabel appointment_lblNotesTitle;
    private javax.swing.JLabel appointment_lblPatient;
    private javax.swing.JLabel appointment_lblPatientTitle;
    private javax.swing.JLabel appointment_lblPrescriptionTitle;
    private javax.swing.JList<String> appointment_lstHistory;
    private javax.swing.JRadioButton appointment_rdoDays;
    private javax.swing.JRadioButton appointment_rdoMonths;
    private javax.swing.JRadioButton appointment_rdoYears;
    private javax.swing.JSpinner appointment_spnDate;
    private javax.swing.JSpinner appointment_spnQuantity;
    private javax.swing.JTextField appointment_txtMedicine;
    private javax.swing.JTextArea appointment_txtNotes;
    private javax.swing.JTextArea appointment_txtPrescriptionGuide;
    private javax.swing.JButton availability_btnAssign;
    private javax.swing.JLabel availability_lblRequest;
    private javax.swing.JList<String> availability_lstDoctors;
    private javax.swing.JList<String> availability_lstSchedule;
    private javax.swing.JLabel availability_txtTitle;
    private javax.swing.JToggleButton doctor_btnBookings;
    private javax.swing.JToggleButton doctor_btnFreeDays;
    private javax.swing.JButton doctor_btnLogout;
    private javax.swing.JButton doctor_btnRequestStock;
    private javax.swing.JToggleButton doctor_btnSchedule;
    private javax.swing.JButton doctor_btnScheduleWeek;
    private javax.swing.JButton doctor_btnTakeAppointment;
    private javax.swing.ButtonGroup doctor_grpSchedule;
    private javax.swing.JLabel doctor_lblHistoryTitle;
    private javax.swing.JLabel doctor_lblOrderStockTitle;
    private javax.swing.JLabel doctor_lblRating;
    private javax.swing.JLabel doctor_lblWelcome;
    private javax.swing.JList<String> doctor_lstSchedule;
    private javax.swing.JLabel doctor_txtSchedule;
    private javax.swing.JTextField doctor_txtStock;
    private javax.swing.JButton feedback_btnBack;
    private javax.swing.JButton feedback_btnSubmit;
    private javax.swing.JLabel feedback_lblComments;
    private javax.swing.JLabel feedback_lblRating;
    private javax.swing.JSlider feedback_sldRating;
    private javax.swing.JTextArea feedback_txtComments;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane21;
    private javax.swing.JScrollPane jScrollPane22;
    private javax.swing.JScrollPane jScrollPane23;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton login_btnLogin;
    private javax.swing.JButton login_btnRequestAccount;
    private javax.swing.JLabel login_lblErrorMessage;
    private javax.swing.JLabel login_lblPassword;
    private javax.swing.JLabel login_lblUsername;
    private javax.swing.JLabel login_lblWelcome;
    private javax.swing.JPasswordField login_txtPassword;
    private javax.swing.JTextField login_txtUsername;
    private javax.swing.JPanel panelAddAccount;
    private javax.swing.JPanel panelAdmin;
    private javax.swing.JPanel panelAppointment;
    private javax.swing.JPanel panelDoctor;
    private javax.swing.JPanel panelFeedback;
    private javax.swing.JPanel panelLogin;
    private javax.swing.JPanel panelPatient;
    private javax.swing.JPanel panelPrescription;
    private javax.swing.JPanel panelRequestAccount;
    private javax.swing.JPanel panelSecretary;
    private javax.swing.JPanel panelViewAvailability;
    private javax.swing.JButton patient_btnDelete;
    private javax.swing.JButton patient_btnLogout;
    private javax.swing.JButton patient_btnProvideFeedback;
    private javax.swing.JButton patient_btnRequestAppointment;
    private javax.swing.JButton patient_btnViewPrescription;
    private javax.swing.JLabel patient_lblActiveAppointment;
    private javax.swing.JLabel patient_lblDoctors;
    private javax.swing.JLabel patient_lblHistoryTitle;
    private javax.swing.JLabel patient_lblNextAppointment;
    private javax.swing.JLabel patient_lblWelcome;
    private javax.swing.JList<String> patient_lstAvailability;
    private javax.swing.JList<String> patient_lstDoctors;
    private javax.swing.JList<String> patient_lstHistory;
    private javax.swing.JTextField patient_txtNextAppointment;
    private javax.swing.JLabel patitent_lblAvailability;
    private javax.swing.JButton prescription_btnBack;
    private javax.swing.JLabel prescription_lblDoctorTitle;
    private javax.swing.JLabel prescription_lblDosageTitle;
    private javax.swing.JLabel prescription_lblNotesTitle;
    private javax.swing.JLabel prescription_llPatientTitle;
    private javax.swing.JTextArea prescription_txtDoctor;
    private javax.swing.JTextArea prescription_txtDosage;
    private javax.swing.JTextArea prescription_txtNotes;
    private javax.swing.JTextArea prescription_txtPatient;
    private javax.swing.JButton requestAccount_btnCancel;
    private javax.swing.JButton requestAccount_btnRequest;
    private javax.swing.ButtonGroup requestAccount_grpSex;
    private javax.swing.JLabel requestAccount_lblAddress;
    private javax.swing.JLabel requestAccount_lblAge;
    private javax.swing.JLabel requestAccount_lblFirst;
    private javax.swing.JLabel requestAccount_lblPassword;
    private javax.swing.JLabel requestAccount_lblSex;
    private javax.swing.JLabel requestAccount_lblSurname;
    private javax.swing.JRadioButton requestAccount_rdoFemale;
    private javax.swing.JRadioButton requestAccount_rdoMale;
    private javax.swing.JSpinner requestAccount_spnAge;
    private javax.swing.JTextArea requestAccount_txtAddress;
    private javax.swing.JTextField requestAccount_txtFirst;
    private javax.swing.JPasswordField requestAccount_txtPassword;
    private javax.swing.JTextField requestAccount_txtSurname;
    private javax.swing.JButton secretary_btnAddStock;
    private javax.swing.JButton secretary_btnConfirmRequest;
    private javax.swing.JButton secretary_btnDeleteAccount;
    private javax.swing.JButton secretary_btnDeleteRequest;
    private javax.swing.JButton secretary_btnLogout;
    private javax.swing.JLabel secretary_lblPatients;
    private javax.swing.JLabel secretary_lblQuantity;
    private javax.swing.JLabel secretary_lblRequests;
    private javax.swing.JLabel secretary_lblStock;
    private javax.swing.JLabel secretary_lblStockItemName;
    private javax.swing.JLabel secretary_lblWelcome;
    private javax.swing.JList<String> secretary_lstPatients;
    private javax.swing.JList<String> secretary_lstRequests;
    private javax.swing.JList<String> secretary_lstStock;
    private javax.swing.JSpinner secretary_spnQuantity;
    private javax.swing.JTextField secretary_txtStockName;
    // End of variables declaration//GEN-END:variables
}
